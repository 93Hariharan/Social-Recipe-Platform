{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.Karuppusamy\\\\OneDrive\\\\Desktop\\\\IBM\\\\photosharing\\\\src\\\\components\\\\LikeButton.js\",\n  _s = $RefreshSig$();\n// src/components/LikeButton.js\nimport React, { useState } from \"react\";\nimport { FaHeart } from \"react-icons/fa\";\nimport \"../styles/CommentSection.css\"; // optional, if used globally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikeButton = () => {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [count, setCount] = useState(0);\n  const toggleLike = () => {\n    setLiked(!liked);\n    setCount(prev => liked ? prev - 1 : prev + 1);\n  };\n  const heartColor = liked && \"red\"; // returns 'red' if liked is true, otherwise false (which doesn't apply)\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleLike,\n    style: {\n      color: heartColor || \"gray\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), \" \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LikeButton, \"G64fDY9Cd8kjGbJOhc8H0gJ2tM8=\");\n_c = LikeButton;\nexport default LikeButton;\nvar _c;\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"names":["React","useState","FaHeart","jsxDEV","_jsxDEV","LikeButton","_s","liked","setLiked","count","setCount","toggleLike","prev","heartColor","onClick","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/M.Karuppusamy/OneDrive/Desktop/IBM/photosharing/src/components/LikeButton.js"],"sourcesContent":["// src/components/LikeButton.js\r\nimport React, { useState } from \"react\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport \"../styles/CommentSection.css\"; // optional, if used globally\r\n\r\nconst LikeButton = () => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const toggleLike = () => {\r\n    setLiked(!liked);\r\n    setCount((prev) => (liked ? prev - 1 : prev + 1));\r\n  };\r\n\r\n  const heartColor = liked && \"red\"; // returns 'red' if liked is true, otherwise false (which doesn't apply)\r\n\r\n  return (\r\n    <button onClick={toggleLike} style={{ color: heartColor || \"gray\" }}>\r\n      <FaHeart /> {count}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LikeButton;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAO,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvBH,QAAQ,CAAC,CAACD,KAAK,CAAC;IAChBG,QAAQ,CAAEE,IAAI,IAAML,KAAK,GAAGK,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAE,CAAC;EACnD,CAAC;EAED,MAAMC,UAAU,GAAGN,KAAK,IAAI,KAAK,CAAC,CAAC;;EAEnC,oBACEH,OAAA;IAAQU,OAAO,EAAEH,UAAW;IAACI,KAAK,EAAE;MAAEC,KAAK,EAAEH,UAAU,IAAI;IAAO,CAAE;IAAAI,QAAA,gBAClEb,OAAA,CAACF,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,EAACZ,KAAK;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEb,CAAC;AAACf,EAAA,CAhBID,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAkBhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}